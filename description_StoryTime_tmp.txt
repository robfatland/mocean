Hello! Read this document to understand what the Python program does when you run it.


Then read the Python program to see if it matches what we have here. 


Before we begin here are this week's challenges: 

1. Try out the program and see if it works. Tell me on Slack.
2. Modify the program in some way...
      Change the player names.
      Send a message from one player to a second player.   
      Send a message back from the second player to the first.
3. Come up with some new ideas for routes: At least three. Tell me on Slack.


BONUS CHALLENGE: You receive 1000 Super Bonus Points if you send a message to another 
#defpython student through the Server that they can read!!!!!! 



We have a Server on the internet. It is listening for messages.


<<< Here is the super secret part: The Server is playing the game called Steps...    >>>
<<<   *and* it is playing the game called Mocean. But Mocean is played... don't tell >>>
<<<   anybody... Mocean is played in the Ocean! This means you can swim around and   >>>
<<<   dive down into the depths and explore... there are whales and everything! But  >>>
<<<   for now we are going to pretend we do not know this. We will do the basics     >>>
<<<   today. The swimming around the ocean will have to come later...                >>>


STORY TIME!!!!
==============

The program in this repl will send messages. The Server will send answers back. 


Remember that each type of message is called a route. For example there is 
a route called 'mocean' that will get the Server to tell you what the other 
routes are called. We will run that first. 


Next we want to find out who is playing the game. So you guessed it, we use
the route 'who'. This gives us a list of the players. 


We have a list of five or six players. If they are already playing then 
that is great. If they are not yet in the game then we better have them 
join the game. Guess what the route is called to join the game.


Now we have some players in the game. 


Let's ask the server "who?" again (route = ___?___) to make sure they are still there.


Now that we have some players let's make sure one of them is named Phil. 


Phil is going to help us test our ability to quit. Let's have Phil quit the game.


After Phil quits we double-check he is gone using the 'who' route again. It is very 
useful. 


Next the player Grob will send a message to the player Shelob. 



At this point we need to imagine we are actually playing the game and there is 
an actual player named Grob and another named Shelob. They live 3.14 miles apart
from each other. They are both running their own Client. In fact each player is
running their own Client. But there is only one Server. It is like an Orange
surrounded by a bunch of individual grapes. 


What happens when Grob sends the message? Does Shelob get it? No! The message
sits on the server in Shelob's mailbox waiting for her to check it. 


Finally Shelob will check her messages. Then and only then will she see what 
Grob said to her. 


We will also check Grob's messages but he won't have any. Nobody sent him one yet. 
